var searchIndex = JSON.parse('{\
"xxd":{"doc":"","t":[0,0,0,5,13,3,13,4,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,13,8,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11],"n":["convert","dump","generate","bytes","Binary","Config","Decimal","Format","Hex","HexUpperCase","Octal","OutputLine","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bytes_per_line","clone","clone","clone_into","clone_into","columns","default","dump_iterator","eq","fmt","fmt","fmt","fmt","format","format","from","from","from","from","group_size","into","into","into","new","new","separator","set_address","show_address","show_interpretation","start_address","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","C","Cpp","Language","Python","Render","Rust","Template","Unknown","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","from","from","from","into","into","new","render","render","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["xxd","","","xxd::convert","xxd::dump","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","xxd::generate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","The dump module contains code related for …","","","","","","Enum which provides all possible output value formats …","","","","The <code>OutputLine</code> struct contains all  information needed to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,0,1,0,1,1,1,0,1,2,3,1,2,3,2,1,2,1,2,2,2,0,1,1,2,3,3,2,3,1,1,2,3,2,1,2,3,2,3,2,2,2,2,2,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,4,4,0,4,0,4,0,4,5,4,5,4,4,4,4,4,5,4,4,5,4,5,6,5,4,5,4,5,4,5,4,5,4],"f":[null,null,null,[[["str",15]],[["u32",15],["iresult",4,["str","vec","u32"]],["str",15],["vec",3,["u8"]]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["format",4]],[[],["config",3]],[[]],[[]],[[["usize",15]]],[[]],[[["write",8],["config",3]],[["result",4,["error"]],["error",3]]],[[["format",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["format",4]]],[[["config",3]]],[[["string",3]]],[[]],[[]],[[]],[[["usize",15]]],[[]],[[]],[[]],[[],["config",3]],[[],["outputline",3]],[[["bool",15]]],[[["usize",15]]],[[["bool",15]]],[[["bool",15]]],[[],["usize",15]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["language",4]],[[]],[[["language",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["str",15]],["language",4]],[[]],[[]],[[]],[[["language",4]],["template",3]],[[],["string",3]],[[],["string",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[4,"Format"],[3,"Config"],[3,"OutputLine"],[4,"Language"],[3,"Template"],[8,"Render"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};